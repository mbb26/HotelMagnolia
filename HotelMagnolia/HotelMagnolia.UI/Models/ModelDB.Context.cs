//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HotelMagnolia.UI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProyectoHotelMagnoliaEntities : DbContext
    {
        public ProyectoHotelMagnoliaEntities()
            : base("name=ProyectoHotelMagnoliaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ACTIVIDAD> ACTIVIDADs { get; set; }
        public virtual DbSet<ARTICULO> ARTICULOes { get; set; }
        public virtual DbSet<BITACORA> BITACORAs { get; set; }
        public virtual DbSet<CONSECUTIVO> CONSECUTIVOes { get; set; }
        public virtual DbSet<HABITACION> HABITACIONs { get; set; }
        public virtual DbSet<PRECIO> PRECIOs { get; set; }
        public virtual DbSet<ROL> ROLs { get; set; }
        public virtual DbSet<USUARIO> USUARIOs { get; set; }
        public virtual DbSet<RESERVACION> RESERVACIONs { get; set; }
    
        public virtual int InsertActividad(string nombre, string descripcion, string img)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var imgParameter = img != null ?
                new ObjectParameter("Img", img) :
                new ObjectParameter("Img", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertActividad", nombreParameter, descripcionParameter, imgParameter);
        }
    
        public virtual int InsertBitacora(string usuario, Nullable<System.DateTime> fecha, Nullable<int> codigo, string tipo, string descripcion, string registro_en_detalle)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(int));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var registro_en_detalleParameter = registro_en_detalle != null ?
                new ObjectParameter("Registro_en_detalle", registro_en_detalle) :
                new ObjectParameter("Registro_en_detalle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertBitacora", usuarioParameter, fechaParameter, codigoParameter, tipoParameter, descripcionParameter, registro_en_detalleParameter);
        }
    
        public virtual int InsertHabitacion(Nullable<int> numero, string nombre, string descripcion)
        {
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertHabitacion", numeroParameter, nombreParameter, descripcionParameter);
        }
    
        public virtual int InsertPrecios(string tipo_Precio, Nullable<int> precio)
        {
            var tipo_PrecioParameter = tipo_Precio != null ?
                new ObjectParameter("Tipo_Precio", tipo_Precio) :
                new ObjectParameter("Tipo_Precio", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertPrecios", tipo_PrecioParameter, precioParameter);
        }
    
        public virtual int InsertUsuarios(string nombre, string apellido1, string apellido2, string correo, Nullable<int> telefono, string password, string user_name, Nullable<int> id_rol)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellido1Parameter = apellido1 != null ?
                new ObjectParameter("apellido1", apellido1) :
                new ObjectParameter("apellido1", typeof(string));
    
            var apellido2Parameter = apellido2 != null ?
                new ObjectParameter("apellido2", apellido2) :
                new ObjectParameter("apellido2", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var user_nameParameter = user_name != null ?
                new ObjectParameter("User_name", user_name) :
                new ObjectParameter("User_name", typeof(string));
    
            var id_rolParameter = id_rol.HasValue ?
                new ObjectParameter("Id_rol", id_rol) :
                new ObjectParameter("Id_rol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertUsuarios", nombreParameter, apellido1Parameter, apellido2Parameter, correoParameter, telefonoParameter, passwordParameter, user_nameParameter, id_rolParameter);
        }
    }
}
